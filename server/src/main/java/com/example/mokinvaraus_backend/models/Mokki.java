package com.example.mokinvaraus_backend.models;

import jakarta.persistence.*;

/**
 * Class for Cabin entities.
 * <p>
 * Each cabin is stored in relational database and these entities represent one entry in the cabin table.
 */
@Entity
@Table(name = "cabin")
public class Mokki {

    /**
     * Cabin's unique ID, generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "cabin_id")
    private int cabinId;

    /**
     * ID of the area where the cabin is located, restricted by the area table.
     */
    @Column(name = "location_id")
    private int areaId;

    /**
     * Cabin's postal code. Database accepts 5 characters long string.
     */
    @Column(name = "zip")
    private String postalCode;

    /**
     * Cabin's name. Database accepts 45 characters long string.
     */
    @Column(name = "cabinname")
    private String cabinName;

    /**
     * Cabin's address. Database accepts 45 characters long string.
     */
    @Column(name = "cabinaddress")
    private String streetAddress;

    /**
     * Price of a cabin reservation for a single night. Database accepts double with 2 decimals.
     */
    @Column(name = "price")
    private double price;

    /**
     * Cabin's description. Database accepts 150 characters long string.
     */
    @Column(name = "description")
    private String description;

    /**
     * Maximum number of people the cabin can hold. Database accepts an integer.
     */
    @Column(name = "capacity")
    private int personCount;

    /**
     * Description of equipment and amenities the cabin has. Database accepts 100 characters long string.
     */
    @Column(name = "amenities")
    private String equipment;

    /**
     * Creates a new empty Mokki instance.
     */
    public Mokki() {
    }

    /**
     * Sets the cabin's areaId.
     * @param areaId The area's ID in integer. Restricted by the appropriate table in the database.
     */
    public void setAreaId(int areaId) {
        this.areaId = areaId;
    }

    /**
     * Sets the cabin's postal code
     * @param postalCode Postal/Zip code in 5 characters long string. Restricted by the appropriate table in the database.
     */
    public void setPostalCode(String postalCode) {
        this.postalCode = postalCode;
    }

    /**
     * Sets the cabin's name.
     * @param cabinName Cabin's name in max. 45 characters long string.
     */
    public void setCabinName(String cabinName) {
        this.cabinName = cabinName;
    }

    /**
     * Sets the cabin's address.
     * @param streetAddress Cabin's address in max. 45 characters long string.
     */
    public void setStreetAddress(String streetAddress) {
        this.streetAddress = streetAddress;
    }

    /**
     * Sets the cabin's price for single night.
     * @param price Price in double with max. 2 decimals.
     */
    public void setPrice(double price) {
        this.price = price;
    }

    /**
     * Sets the cabin's description.
     * @param description Descriptive text, max. 150 characters long string.
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Sets the maximum of people the cabin houses.
     * @param personCount  Integer of the maximum amount.
     */
    public void setPersonCount(int personCount) {
        this.personCount = personCount;
    }

    /**
     * Sets the cabin's equipment.
     * @param equipment 100 characters long string listing out the equipment or amenities.
     */
    public void setEquipment(String equipment) {
        this.equipment = equipment;
    }

    /**
     * Returns the cabin's ID. This is the unique primary key in the database.
     * @return The cabin's ID from the database in int.
     */
    public int getCabinId() {
        return cabinId;
    }

    /**
     * Returns the ID of the area the cabin is located in. This is the unique primary key for the area in the database.
     * @return The area's ID from the database in int.
     */
    public int getAreaId() {
        return areaId;
    }

    /**
     * Returns the postal/zip code of the cabin. This is the unique primary key for the postal table in the database.
     * @return The postal code of the cabin in string.
     */
    public String getPostalCode() {
        return postalCode;
    }

    /**
     * Returns the cabin's name.
     * @return The name of the cabin in string.
     */
    public String getCabinName() {
        return cabinName;
    }

    /**
     * Returns the cabin's address.
     * @return The address of the cabin in string.
     */
    public String getStreetAddress() {
        return streetAddress;
    }

    /**
     * Returns the cabin's price for single night.
     * @return The price of the cabin in double.
     */
    public double getPrice() {
        return price;
    }

    /**
     * Returns the cabin's description.
     * @return The description of the cabin in string.
     */
    public String getDescription() {
        return description;
    }

    /**
     * Returns the maximum amount of people the cabin can house.
     * @return The maximum number of people in int.
     */
    public int getPersonCount() {
        return personCount;
    }

    /**
     * Returns the cabin's equipment listing.
     * @return The listing of equipment/amenities in string.
     */
    public String getEquipment() {
        return equipment;
    }

    @Override
    public String toString() {
        return "Mokki{" +
                "cabinId=" + cabinId +
                ", areaId=" + areaId +
                ", postalCode='" + postalCode + '\'' +
                ", cabinName='" + cabinName + '\'' +
                ", streetAddress='" + streetAddress + '\'' +
                ", price=" + price +
                ", description='" + description + '\'' +
                ", personCount=" + personCount +
                ", equipment='" + equipment + '\'' +
                '}';
    }
}
